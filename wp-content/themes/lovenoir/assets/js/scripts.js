// Generated by CoffeeScript 1.9.3 INSTAFEED
(function(){var e;e=function(){function e(e,t){var n,r;this.options={target:"instafeed",get:"popular",resolution:"thumbnail",sortBy:"none",links:!0,mock:!1,useHttp:!1};if(typeof e=="object")for(n in e)r=e[n],this.options[n]=r;this.context=t!=null?t:this,this.unique=this._genKey()}return e.prototype.hasNext=function(){return typeof this.context.nextUrl=="string"&&this.context.nextUrl.length>0},e.prototype.next=function(){return this.hasNext()?this.run(this.context.nextUrl):!1},e.prototype.run=function(t){var n,r,i;if(typeof this.options.clientId!="string"&&typeof this.options.accessToken!="string")throw new Error("Missing clientId or accessToken.");if(typeof this.options.accessToken!="string"&&typeof this.options.clientId!="string")throw new Error("Missing clientId or accessToken.");return this.options.before!=null&&typeof this.options.before=="function"&&this.options.before.call(this),typeof document!="undefined"&&document!==null&&(i=document.createElement("script"),i.id="instafeed-fetcher",i.src=t||this._buildUrl(),n=document.getElementsByTagName("head"),n[0].appendChild(i),r="instafeedCache"+this.unique,window[r]=new e(this.options,this),window[r].unique=this.unique),!0},e.prototype.parse=function(e){var t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A,O,M,_,D;if(typeof e!="object"){if(this.options.error!=null&&typeof this.options.error=="function")return this.options.error.call(this,"Invalid JSON data"),!1;throw new Error("Invalid JSON response")}if(e.meta.code!==200){if(this.options.error!=null&&typeof this.options.error=="function")return this.options.error.call(this,e.meta.error_message),!1;throw new Error("Error from Instagram: "+e.meta.error_message)}if(e.data.length===0){if(this.options.error!=null&&typeof this.options.error=="function")return this.options.error.call(this,"No images were returned from Instagram"),!1;throw new Error("No images were returned from Instagram")}this.options.success!=null&&typeof this.options.success=="function"&&this.options.success.call(this,e),this.context.nextUrl="",e.pagination!=null&&(this.context.nextUrl=e.pagination.next_url);if(this.options.sortBy!=="none"){this.options.sortBy==="random"?M=["","random"]:M=this.options.sortBy.split("-"),O=M[0]==="least"?!0:!1;switch(M[1]){case"random":e.data.sort(function(){return.5-Math.random()});break;case"recent":e.data=this._sortBy(e.data,"created_time",O);break;case"liked":e.data=this._sortBy(e.data,"likes.count",O);break;case"commented":e.data=this._sortBy(e.data,"comments.count",O);break;default:throw new Error("Invalid option for sortBy: '"+this.options.sortBy+"'.")}}if(typeof document!="undefined"&&document!==null&&this.options.mock===!1){m=e.data,A=parseInt(this.options.limit,10),this.options.limit!=null&&m.length>A&&(m=m.slice(0,A)),u=document.createDocumentFragment(),this.options.filter!=null&&typeof this.options.filter=="function"&&(m=this._filter(m,this.options.filter));if(this.options.template!=null&&typeof this.options.template=="string"){f="",d="",w="",D=document.createElement("div");for(c=0,N=m.length;c<N;c++){h=m[c],p=h.images[this.options.resolution];if(typeof p!="object")throw o="No image found for resolution: "+this.options.resolution+".",new Error(o);E=p.width,y=p.height,b="square",E>y&&(b="landscape"),E<y&&(b="portrait"),v=p.url,l=window.location.protocol.indexOf("http")>=0,l&&!this.options.useHttp&&(v=v.replace(/https?:\/\//,"//")),d=this._makeTemplate(this.options.template,{model:h,id:h.id,link:h.link,type:h.type,image:v,width:E,height:y,orientation:b,caption:this._getObjectProperty(h,"caption.text"),likes:h.likes.count,comments:h.comments.count,location:this._getObjectProperty(h,"location.name")}),f+=d}D.innerHTML=f,i=[],r=0,n=D.childNodes.length;while(r<n)i.push(D.childNodes[r]),r+=1;for(x=0,C=i.length;x<C;x++)L=i[x],u.appendChild(L)}else for(T=0,k=m.length;T<k;T++){h=m[T],g=document.createElement("img"),p=h.images[this.options.resolution];if(typeof p!="object")throw o="No image found for resolution: "+this.options.resolution+".",new Error(o);v=p.url,l=window.location.protocol.indexOf("http")>=0,l&&!this.options.useHttp&&(v=v.replace(/https?:\/\//,"//")),g.src=v,this.options.links===!0?(t=document.createElement("a"),t.href=h.link,t.appendChild(g),u.appendChild(t)):u.appendChild(g)}_=this.options.target,typeof _=="string"&&(_=document.getElementById(_));if(_==null)throw o='No element with id="'+this.options.target+'" on page.',new Error(o);_.appendChild(u),a=document.getElementsByTagName("head")[0],a.removeChild(document.getElementById("instafeed-fetcher")),S="instafeedCache"+this.unique,window[S]=void 0;try{delete window[S]}catch(P){s=P}}return this.options.after!=null&&typeof this.options.after=="function"&&this.options.after.call(this),!0},e.prototype._buildUrl=function(){var e,t,n;e="https://api.instagram.com/v1";switch(this.options.get){case"popular":t="media/popular";break;case"tagged":if(!this.options.tagName)throw new Error("No tag name specified. Use the 'tagName' option.");t="tags/"+this.options.tagName+"/media/recent";break;case"location":if(!this.options.locationId)throw new Error("No location specified. Use the 'locationId' option.");t="locations/"+this.options.locationId+"/media/recent";break;case"user":if(!this.options.userId)throw new Error("No user specified. Use the 'userId' option.");t="users/"+this.options.userId+"/media/recent";break;default:throw new Error("Invalid option for get: '"+this.options.get+"'.")}return n=e+"/"+t,this.options.accessToken!=null?n+="?access_token="+this.options.accessToken:n+="?client_id="+this.options.clientId,this.options.limit!=null&&(n+="&count="+this.options.limit),n+="&callback=instafeedCache"+this.unique+".parse",n},e.prototype._genKey=function(){var e;return e=function(){return((1+Math.random())*65536|0).toString(16).substring(1)},""+e()+e()+e()+e()},e.prototype._makeTemplate=function(e,t){var n,r,i,s,o;r=/(?:\{{2})([\w\[\]\.]+)(?:\}{2})/,n=e;while(r.test(n))s=n.match(r)[1],o=(i=this._getObjectProperty(t,s))!=null?i:"",n=n.replace(r,function(){return""+o});return n},e.prototype._getObjectProperty=function(e,t){var n,r;t=t.replace(/\[(\w+)\]/g,".$1"),r=t.split(".");while(r.length){n=r.shift();if(!(e!=null&&n in e))return null;e=e[n]}return e},e.prototype._sortBy=function(e,t,n){var r;return r=function(e,r){var i,s;return i=this._getObjectProperty(e,t),s=this._getObjectProperty(r,t),n?i>s?1:-1:i<s?1:-1},e.sort(r.bind(this)),e},e.prototype._filter=function(e,t){var n,r,i,s,o;n=[],r=function(e){if(t(e))return n.push(e)};for(i=0,o=e.length;i<o;i++)s=e[i],r(s);return n},e}(),function(e,t){return typeof define=="function"&&define.amd?define([],t):typeof module=="object"&&module.exports?module.exports=t():e.Instafeed=t()}(this,function(){return e})}).call(this);

// SCROLL TO SECTION 
/**
 * Copyright (c) 2007 Ariel Flesler - aflesler ○ gmail • com | https://github.com/flesler
 * Licensed under MIT
 * @author Ariel Flesler
 * @version 2.1.2
 */
;(function(f){"use strict";"function"===typeof define&&define.amd?define(["jquery"],f):"undefined"!==typeof module&&module.exports?module.exports=f(require("jquery")):f(jQuery)})(function($){"use strict";function n(a){return!a.nodeName||-1!==$.inArray(a.nodeName.toLowerCase(),["iframe","#document","html","body"])}function h(a){return $.isFunction(a)||$.isPlainObject(a)?a:{top:a,left:a}}var p=$.scrollTo=function(a,d,b){return $(window).scrollTo(a,d,b)};p.defaults={axis:"xy",duration:0,limit:!0};$.fn.scrollTo=function(a,d,b){"object"=== typeof d&&(b=d,d=0);"function"===typeof b&&(b={onAfter:b});"max"===a&&(a=9E9);b=$.extend({},p.defaults,b);d=d||b.duration;var u=b.queue&&1<b.axis.length;u&&(d/=2);b.offset=h(b.offset);b.over=h(b.over);return this.each(function(){function k(a){var k=$.extend({},b,{queue:!0,duration:d,complete:a&&function(){a.call(q,e,b)}});r.animate(f,k)}if(null!==a){var l=n(this),q=l?this.contentWindow||window:this,r=$(q),e=a,f={},t;switch(typeof e){case "number":case "string":if(/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(e)){e= h(e);break}e=l?$(e):$(e,q);case "object":if(e.length===0)return;if(e.is||e.style)t=(e=$(e)).offset()}var v=$.isFunction(b.offset)&&b.offset(q,e)||b.offset;$.each(b.axis.split(""),function(a,c){var d="x"===c?"Left":"Top",m=d.toLowerCase(),g="scroll"+d,h=r[g](),n=p.max(q,c);t?(f[g]=t[m]+(l?0:h-r.offset()[m]),b.margin&&(f[g]-=parseInt(e.css("margin"+d),10)||0,f[g]-=parseInt(e.css("border"+d+"Width"),10)||0),f[g]+=v[m]||0,b.over[m]&&(f[g]+=e["x"===c?"width":"height"]()*b.over[m])):(d=e[m],f[g]=d.slice&& "%"===d.slice(-1)?parseFloat(d)/100*n:d);b.limit&&/^\d+$/.test(f[g])&&(f[g]=0>=f[g]?0:Math.min(f[g],n));!a&&1<b.axis.length&&(h===f[g]?f={}:u&&(k(b.onAfterFirst),f={}))});k(b.onAfter)}})};p.max=function(a,d){var b="x"===d?"Width":"Height",h="scroll"+b;if(!n(a))return a[h]-$(a)[b.toLowerCase()]();var b="client"+b,k=a.ownerDocument||a.document,l=k.documentElement,k=k.body;return Math.max(l[h],k[h])-Math.min(l[b],k[b])};$.Tween.propHooks.scrollLeft=$.Tween.propHooks.scrollTop={get:function(a){return $(a.elem)[a.prop]()}, set:function(a){var d=this.get(a);if(a.options.interrupt&&a._last&&a._last!==d)return $(a.elem).stop();var b=Math.round(a.now);d!==b&&($(a.elem)[a.prop](b),a._last=this.get(a))}};return p});

/*!
 * Javascript Cookie v1.5.1
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2014 Klaus Hartl
 * Released under the MIT license
 */
(function(factory){var jQuery;if(typeof define==='function'&&define.amd){define(['jquery'],factory);}else if(typeof exports==='object'){try{jQuery=require('jquery');}catch(e){}
module.exports=factory(jQuery);}else{var _OldCookies=window.Cookies;var api=window.Cookies=factory(window.jQuery);api.noConflict=function(){window.Cookies=_OldCookies;return api;};}}(function($){var pluses=/\+/g;function encode(s){return api.raw?s:encodeURIComponent(s);}
function decode(s){return api.raw?s:decodeURIComponent(s);}
function stringifyCookieValue(value){return encode(api.json?JSON.stringify(value):String(value));}
function parseCookieValue(s){if(s.indexOf('"')===0){s=s.slice(1,-1).replace(/\\"/g,'"').replace(/\\\\/g,'\\');}
try{s=decodeURIComponent(s.replace(pluses,' '));return api.json?JSON.parse(s):s;}catch(e){}}
function read(s,converter){var value=api.raw?s:parseCookieValue(s);return isFunction(converter)?converter(value):value;}
function extend(){var key,options;var i=0;var result={};for(;i<arguments.length;i++){options=arguments[i];for(key in options){result[key]=options[key];}}
return result;}
function isFunction(obj){return Object.prototype.toString.call(obj)==='[object Function]';}
var api=function(key,value,options){if(arguments.length>1&&!isFunction(value)){options=extend(api.defaults,options);if(typeof options.expires==='number'){var days=options.expires,t=options.expires=new Date();t.setMilliseconds(t.getMilliseconds()+days*864e+5);}
return(document.cookie=[encode(key),'=',stringifyCookieValue(value),options.expires?'; expires='+options.expires.toUTCString():'',options.path?'; path='+options.path:'',options.domain?'; domain='+options.domain:'',options.secure?'; secure':''].join(''));}
var result=key?undefined:{},cookies=document.cookie?document.cookie.split('; '):[],i=0,l=cookies.length;for(;i<l;i++){var parts=cookies[i].split('='),name=decode(parts.shift()),cookie=parts.join('=');if(key===name){result=read(cookie,value);break;}
if(!key&&(cookie=read(cookie))!==undefined){result[name]=cookie;}}
return result;};api.get=api.set=api;api.defaults={};api.remove=function(key,options){api(key,'',extend(options,{expires:-1}));return!api(key);};if($){$.cookie=api;$.removeCookie=api.remove;}
return api;}));

jQuery(document).foundation();
/*
These functions make sure WordPress
and Foundation play nice together.
*/
jQuery(function($) {
	jQuery(document).ready(function() {
		// Remove empty P tags created by WP inside of Accordion and Orbit
		jQuery('.accordion p:empty, .orbit p:empty').remove();
		// Makes sure last grid item floats left
		jQuery('.archive-grid .columns').last().addClass('end');
		// Adds Flex Video to YouTube and Vimeo Embeds
		jQuery('iframe[src*="youtube.com"], iframe[src*="vimeo.com"]').each(function() {
			if (jQuery(this).innerWidth() / jQuery(this).innerHeight() > 1.5) {
				jQuery(this).wrap("<div class='widescreen flex-video'/>");
			} else {
				jQuery(this).wrap("<div class='flex-video'/>");
			}
		});
		
		$(".fancybox").fancybox({
				maxWidth: 1000,
				maxHeight: 1000,
				fitToView: false,
				width: '70%',
				height: '90%',
				autoSize: false,
				closeClick: false,
				openEffect: 'none',
				closeEffect: 'none'
			});
		// INSTAFEED
		
		// SNAP
/*
	  	if ($(window).width() > 800) {
		  	$("#container section").css("min-height", $(window).height() + "px");
			$("#container").sectionsnap({
				delay : 50
				, selector : 'section'
				, reference : 1
				, animationTime : 400
			});
		}
*/
		// SCROLL TO SECTION
		$('.home .dropdown-arrow').click(function() {
			jQuery.scrollTo('section.wine-list', 500, {
				offset: 0
			});
			return false;
		});
		$('.page-id-8 .dropdown-arrow').click(function() {
			jQuery.scrollTo('section.wines', 500, {
				offset: 0
			});
			return false;
		});
		$('.page-id-14 .dropdown-arrow').click(function() {
			jQuery.scrollTo('section.wines', 500, {
				offset: 0
			});
			return false;
		});
		$('.page-id-12 .dropdown-arrow, .find_button').click(function() {
			jQuery.scrollTo('.map', 500, {
				offset: 0
			});
			return false;
		});
		$('.single-wines .dropdown-arrow').click(function() {
			jQuery.scrollTo('.wine-details', 500, {
				offset: 0
			});
			return false;
		});
		$(window).scroll(function() {
			var hT = $('.wine-list').offset().top - 200,
				hH = $('.wine-list').outerHeight(),
				wH = $(window).height(),
				wS = $(this).scrollTop();
			if ($(window).width() > 740) {
				if (wS > (hT + hH - wH)) {
					$('.wine-list').addClass('inFocus');
				} else {
					$('.wine-list').removeClass('inFocus');
				}
			}
		});
		$(window).scroll(function() {
			var hT = $('.wine-list').offset().top - 200,
				hH = $('.wine-list').outerHeight(),
				wH = $(window).height(),
				wS = $(this).scrollTop();
			if ($(window).width() > 740) {
				if (wS > (hT + hH - wH)) {
					$('#snap-container').addClass('inFocus');
				} else {
					$('#snap-container').removeClass('inFocus');
				}
			}
		});
		// SCROLL IN VIEW
		var wines = $('.page-id-14 .wines').offset();
		var wineHover = $('#content .wine-list').offset();
		var find = $('.map').offset();
		var $window = $(window);
		$window.scroll(function() {
			if ($window.scrollTop() >= wines.top) {
				$(".page-id-14 .wines").addClass("inFocus");
			}
		});
	});
});
jQuery(function($) {
	$(document).ready(function() {
		$('#modal_regret_wrapper').on('click', function() {
			$(this).hide();
			$('#modal_content_wrapper').show();
		});
	});
});

// UNCOMMENT FOR SITES NOT BUILT WITH COMPILED JAVASCRIPT
var objectPollyScript = document.createElement('script');
objectPollyScript.type = 'text/javascript';
objectPollyScript.src = 'https://unpkg.com/es7-object-polyfill';
document.getElementsByTagName('head')[0].appendChild(objectPollyScript);
jQuery(function($) {
$(document).ready(function () {
    $('.wpcf7').animate({
        opacity: 1
    }, 1500);

    if ($('.wpcf7-form').length) {
        var canada;
        var unitedStates;

        (function () {

            var getStates = function getStates() {
                // Check initial country Value
                if ($('#country').val() == 'US') {
                    Object.values(unitedStates).forEach(function (state) {
                        $('#state').append('<option value="' + state.abbreviation + '">' + state.name + '</option>');
                    });
                }
                if ($('#country').val() == 'Canada') {
                    Object.values(canada).forEach(function (state) {
                        $('#state').append('<option value="' + state.abbreviation + '">' + state.name + '</option>');
                    });
                }
                if ($('#country').val() == 'Other') {
                }
            };

            // Initiate Country check


            // Clear all state option fields
            var refreshStates = function refreshStates() {
                $('#state option').each(function (index, obj) {
                    $(obj).remove();
                });
            };

            // Watch for country select change


            canada = {
                alberta: {
                    name: 'Alberta',
                    abbreviation: 'AB'
                },
                britishColumbia: {
                    name: 'British Columbia',
                    abbreviation: 'BC'
                },
                manitoba: {
                    name: 'Manitoba',
                    abbreviation: 'MB'
                },
                newBrunswick: {
                    name: 'New Brunswick',
                    abbreviation: 'NB'
                },
                newfoundlandAndLabrador: {
                    name: 'Newfoundland and Labrator',
                    abbreviation: 'NL'
                },
                northwestTerritories: {
                    name: 'Northwest Territories',
                    abbreviation: 'NT'
                },
                novaScotia: {
                    name: 'Nova Scotia',
                    abbreviation: 'NS'
                },
                nunavut: {
                    name: 'Nunavut',
                    abbreviation: 'NU'
                },
                ontario: {
                    name: 'Ontario',
                    abbreviation: 'ON'
                },
                princeEdwardIsland: {
                    name: 'Prince Edward Island',
                    abbreviation: 'PE'
                },
                quebec: {
                    name: 'Quebec',
                    abbreviation: 'QC'
                },
                saskatchewan: {
                    name: 'Saskatchewan',
                    abbreviation: 'SK'
                },
                yukon: {
                    name: 'Yukon',
                    abbreviation: 'YT'
                }
            };
                        unitedStates = {
                alabama: {
                    name: 'Alabama',
                    abbreviation: 'AL'
                },
                alaska: {
                    name: 'Alaska',
                    abbreviation: 'AK'
                },
                arizona: {
                    name: 'Arizona',
                    abbreviation: 'AZ'
                },
                arkansas: {
                    name: 'Arkansas',
                    abbreviation: 'AR'
                },
                california: {
                    name: 'California',
                    abbreviation: 'CA'
                },
                colorado: {
                    name: 'Colorado',
                    abbreviation: 'CO'
                },
                connecticut: {
                    name: 'Connecticut',
                    abbreviation: 'CT'
                },
                deleware: {
                    name: 'Delaware',
                    abbreviation: 'DE'
                },
                districtOfColumbia: {
                    name: 'District of Columbia',
                    abbreviation: 'DC'
                },
                florida: {
                    name: 'Florida',
                    abbreviation: 'FL'
                },
                georgia: {
                    name: 'Georgia',
                    abbreviation: 'GA'
                },
                hawaii: {
                    name: 'Hawaii',
                    abbreviation: 'HI'
                },
                idaho: {
                    name: 'Idaho',
                    abbreviation: 'ID'
                },
                illinios: {
                    name: 'Illinois',
                    abbreviation: 'IL'
                },
                indiana: {
                    name: 'Indiana',
                    abbreviation: 'IN'
                },
                iowa: {
                    name: 'Iowa',
                    abbreviation: 'IA'
                },
                kansas: {
                    name: 'Kansas',
                    abbreviation: 'KS'
                },
                kentucky: {
                    name: 'Kentucky',
                    abbreviation: 'KY'
                },
                louisiana: {
                    name: 'Louisiana',
                    abbreviation: 'LA'
                },
                maine: {
                    name: 'Maine',
                    abbreviation: 'ME'
                },
                maryland: {
                    name: 'Maryland',
                    abbreviation: 'MD'
                },
                massachusetts: {
                    name: 'Massachusetts',
                    abbreviation: 'MA'
                },
                michigan: {
                    name: 'Michigan',
                    abbreviation: 'MI'
                },
                minnesota: {
                    name: 'Minnesota',
                    abbreviation: 'MN'
                },
                mississippi: {
                    name: 'Mississippi',
                    abbreviation: 'MS'
                },
                missouri: {
                    name: 'Missouri',
                    abbreviation: 'MO'
                },
                montana: {
                    name: 'Montana',
                    abbreviation: 'MT'
                },
                nebraska: {
                    name: 'Nebraska',
                    abbreviation: 'NE'
                },
                nevada: {
                    name: 'Nevada',
                    abbreviation: 'NV'
                },
                newHampshire: {
                    name: 'New Hampshire',
                    abbreviation: 'NH'
                },
                newJersey: {
                    name: 'New Jersey',
                    abbreviation: 'NJ'
                },
                newMexico: {
                    name: 'New Mexico',
                    abbreviation: 'NM'
                },
                newYork: {
                    name: 'New York',
                    abbreviation: 'NY'
                },
                northCarolina: {
                    name: 'North Carolina',
                    abbreviation: 'NC'
                },
                northDakota: {
                    name: 'North Dakota',
                    abbreviation: 'ND'
                },
                ohio: {
                    name: 'Ohio',
                    abbreviation: 'OH'
                },
                oklahoma: {
                    name: 'Oklahoma',
                    abbreviation: 'OK'
                },
                oregon: {
                    name: 'Oregon',
                    abbreviation: 'OR'
                },
                pennsylvania: {
                    name: 'Pennsylvania',
                    abbreviation: 'PA'
                },
                rhodeIsland: {
                    name: 'Rhode Island',
                    abbreviation: 'RI'
                },
                southCarolina: {
                    name: 'South Carolina',
                    abbreviation: 'SC'
                },
                southDakota: {
                    name: 'South Dakota',
                    abbreviation: 'SD'
                },
                tennessee: {
                    name: 'Tennessee',
                    abbreviation: 'TN'
                },
                texas: {
                    name: 'Texas',
                    abbreviation: 'TX'
                },
                utah: {
                    name: 'Utah',
                    abbreviation: 'UT'
                },
                vermont: {
                    name: 'Vermont',
                    abbreviation: 'VT'
                },
                virginia: {
                    name: 'Virginia',
                    abbreviation: 'VA'
                },
                washington: {
                    name: 'Washington',
                    abbreviation: 'WA'
                },
                westVirginia: {
                    name: 'West Virginia',
                    abbreviation: 'WV'
                },
                wisconsin: {
                    name: 'Wisconsin',
                    abbreviation: 'WI'
                },
                wyoming: {
                    name: 'Wyoming',
                    abbreviation: 'WY'
                }
            };
            getStates();$('#country').on('change', function (e) {
                e.preventDefault();
                refreshStates();
                getStates();
            });
        })();
    }
});
});